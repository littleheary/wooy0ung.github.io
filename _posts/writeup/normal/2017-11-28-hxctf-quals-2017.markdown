---
layout:     post
title:      湖湘杯2017部分writeup
author:     wooy0ung
tags: 		normal
category:  	writeup
---


>Download:  
>svn checkout https://github.com/wooy0ung/ctfs/trunk/write-ups-2017/hxctf-quals-2017  
<!-- more -->


## Reverse

### 0x01 RE4newer

upx脱壳, 拖到IDA

![](/assets/img/writeup/normal/2017-11-28-hxctf-quals-2017/0x01.png)

```
.rdata:0041D730 xmmword_41D730  xmmword 130000004A0000007600000059h
.rdata:0041D730                                         ; DATA XREF: sub_401080+22r
.rdata:0041D740 xmmword_41D740  xmmword 45000000430000004E00000044h
.rdata:0041D740                                         ; DATA XREF: sub_401080+13r
.rdata:0041D750 xmmword_41D750  xmmword 520000004F0000004B00000051h
.rdata:0041D750                                         ; DATA XREF: sub_401080+59r
.rdata:0041D760 xmmword_41D760  xmmword 540000007D000000630000007Dh
.rdata:0041D760                                         ; DATA XREF: sub_401080+40r
.rdata:0041D770 xmmword_41D770  xmmword 5F00000056000000130000007Dh
.rdata:0041D770                                         ; DATA XREF: sub_401080+90r
.rdata:0041D780 xmmword_41D780  xmmword 67000000670000007000000070h
.rdata:0041D780                                         ; DATA XREF: sub_401080+6Fr
.rdata:0041D790 xmmword_41D790  xmmword 700000007D000000470000004Eh
.rdata:0041D790                                         ; DATA XREF: sub_401080+64r
.rdata:0041D7A0 xmmword_41D7A0  xmmword 710000004B0000007D00000051h
.rdata:0041D7A0                                         ; DATA XREF: sub_401080+32r
.rdata:0041D7B0 xmmword_41D7B0  xmmword 71000000510000006300000052h
.rdata:0041D7B0                                         ; DATA XREF: sub_401080+85r
.rdata:0041D7C0 xmmword_41D7C0  xmmword 7D000000570000007D00000067h
.rdata:0041D7C0                                         ; DATA XREF: sub_401080+7Ar
.rdata:0041D7D0 xmmword_41D7D0  xmmword 7D0000005B0000005000000011h
.rdata:0041D7D0                                         ; DATA XREF: sub_401080+4Er
```

定位到校验函数, 输入串与0x22异或判断与某串字符是否相等, 生成一下flag

```
src = [0x44,0x4E,0x43,0x45,0x59,0x76,0x4A,0x13,0x51,0x7D,0x4B,0x71,0x7D,0x63,0x7D,0x54,
		0x11,0x50,0x5B,0x7D,0x51,0x4B,0x4F,0x52,0x4E,0x47,0x7D,0x70,0x70,0x70,0x67,0x67,
		0x67,0x7D,0x57,0x7D,0x52,0x63,0x51,0x71,0x7D,0x13,0x56,0x5F]

flag = ""
for i in range(len(src)):
	flag += chr(src[i] ^ 0x22)

print flag
```

![](/assets/img/writeup/normal/2017-11-28-hxctf-quals-2017/0x02.png)


### 0x02 简单的android

用jeb打开, 直接就看到flag

![](/assets/img/writeup/normal/2017-11-28-hxctf-quals-2017/0x03.png)

发现调用package a.a, 跟过去

![](/assets/img/writeup/normal/2018-01-07-xman-quals-2018/0x03.png)

这里判断每位注册码是否在0~9、A~Z、a~z里面, 注册码类似xxxx-yyyy-zzzz-uuuu这种形式

![](/assets/img/writeup/normal/2018-01-07-xman-quals-2018/0x04.png)

这里对注册码进行校验

```
v1表示xxxx段, v2表示uuuu段, 要求满足以下条件
v1[0] == v2[1] – 3
v2[0] == v1[0] - 4 / 2
v2[2] % 2 != 1
v2[2] == v1[2] + 4 * 2
v1[3] == (((char)(v2[2] | 1)))
v1[1] * 2 == v1[2] – 8
v2[3] == v1[2]
v2[1] == (((char)(v1[3] ^ 18)))
a = v2[3] ^ 55  < 100	// 并且最后把a值输出出来
--------------------------------------------
v1表示yyyy段, v2表示zzzz段，要求满足以下条件
4 * 3 + v1[1] == v1[3]
(v2[2] ^ v1[1]) == 5
(v1[0] ^ v1[1]) == 15
v1[0] + v2[0] == 187
v1[0] + v2[3] == 210
v2[1] * 2 == v1[3] – 11
(v1[3] ^ v1[2]) == 47
b = v1[2] - 4 ^ 113		// 最后把b值输出出来
--------------------------------------------
注册码组合必须满足a > b
```

爆破注册码

```
#!/usr/bin/python
# -*- coding:utf8 -*-

table = ['0','1','2','3','4','5','6','7','8','9',
		'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
		'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']

pad = [0,0,0,0,0,0,0,0]

for i in table:
	if ord(i) % 2 != 1:
		pad[6] = i
		if chr(ord(i) - 8) in table:
			pad[2] = chr(ord(i) - 8)
			if chr(ord(i) | 1) in table:
				pad[3] = chr(ord(i) | 1)
				if chr((ord(i) - 16)/2) in table:
					pad[1] = chr((ord(i) - 16)/2)
					if chr(ord(i) - 8) in table and ((ord(i) - 8) ^ 55) < 100:
						pad[7] = chr(ord(i) - 8)
						if chr((ord(i) | 1) ^ 18) in table:
							pad[5] = chr((ord(i) | 1) ^ 18)
							if chr(((ord(i) | 1) ^ 18) - 3) in table:
								pad[0] = chr(((ord(i) | 1) ^ 18) - 3)
								if chr(((ord(i) | 1) ^ 18) - 5) in table:
									pad[4] = chr(((ord(i) | 1) ^ 18) - 5)
									print pad,ord(pad[7]) ^ 55
print ""
print ""

pad2 = [0,0,0,0,0,0,0,0]

for i in table:
	pad2[1] = i
	if chr(ord(i) + 12) in table:
		pad2[3] = chr(ord(i) + 12)
		if chr(ord(i) ^ 5) in table:
			pad2[6] = chr(ord(i) ^ 5)
			if chr(ord(i) ^ 15) in table:
				pad2[0] = chr(ord(i) ^ 15)
				if chr(187 - (ord(i) ^ 15)) in table:
					pad2[4] = chr(187 - (ord(i) ^ 15))
					if chr(210 - (ord(i) ^ 15)) in table:
						pad2[7] = chr(210 - (ord(i) ^ 15))
						if chr((ord(i) + 1)/2) in table:
							pad2[5] =  chr((ord(i) + 1)/2)
							if chr((ord(i) + 12) ^ 47) in table:
								pad2[2] = chr((ord(i) + 12) ^ 47)
								print pad2,ord(pad2[2]) - 4 ^ 113

```

![](/assets/img/writeup/normal/2018-01-07-xman-quals-2018/0x05.png)

得到以下几组满足条件的注册码

```
d2lu-naBm-M1dd-bgtl
d2lu-mbAn-N1ge-bgtl
d2lu-fiZu-U5ll-bgtl
d2lu-ejYv-V5om-bgtl
d2lu-dkXw-W6nn-bgtl
d2lu-clWx-X6io-bgtl
d2lu-bmVy-Y7hp-bgtl
d2lu-anUz-Z7kq-bgtl
--------------------------------------------
h4py-fiZu-U5ll-fkxp
h4py-ejYv-V5om-fkxp
h4py-dkXw-W6nn-fkxp
h4py-clWx-X6io-fkxp
h4py-bmVy-Y7hp-fkxp
h4py-anUz-Z7kq-fkxp
```

逐一提交, 得到正确flag
```
XCTF{D2LU-BMVY-Y7HP-BGTL}
```


### 0x02 中二的成长之路

```
说明: 我用真心对你，你却用QR敷衍我。
Hint1: 试试QR的哈希，并且注意红字。
Hint2: 使用图片显示的某些信息做哈希
Hint3: 再次观察图片，看看不一样的颜色和字体，也许需要做一下哈希
```

拿到图片binwalk扫一下, 发现有隐写文件, foremost命令分离

![](/assets/img/writeup/normal/2018-01-07-xman-quals-2018/0x06.png)

打开压缩包, 需要密码, 扫二维码得到"3ukka4wZf2Q9H8PEI5YKFA==", base64解码乱码

![](/assets/img/writeup/normal/2018-01-07-xman-quals-2018/0x07.png)

根据提示, 对"QR"做一次hash作为key解AES

![](/assets/img/writeup/normal/2018-01-07-xman-quals-2018/0x08.png)

解压缩包, 又得到一张二维码

![](/assets/img/writeup/normal/2018-01-07-xman-quals-2018/0x09.png)

图片名作key, 再解一次AES, 得到flag

![](/assets/img/writeup/normal/2018-01-07-xman-quals-2018/0x10.png)

解密脚本

```
#!/usr/bin/python
# -*- coding:utf8 -*-

from Crypto.Cipher import AES
import hashlib

key = hashlib.md5("QR").hexdigest()
enc = "3ukka4wZf2Q9H8PEI5YKFA=="

plain = AES.new(key,AES.MODE_ECB).decrypt(enc.decode("base64"))

print plain
# 1Znmpr4jzChwxXqB

key = "s776051080zum92N"
enc = "bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so="

plain = AES.new(key,AES.MODE_ECB).decrypt(enc.decode("base64"))

print plain
# XCTF{W0W_U_G0T_TH3_FL4G}
```


### 0x03 神秘的TXT 

```
说明: 你从哪里来的呀？
```

得到一串字符
```
XCTF{(37,99)(19,99)(19,108)(28,99)(28,108)(37,108)(37,117)(28,117)(19,117)}
```

像是3x3的坐标, 猜测是手机键盘密码, 坐标有8种组合方式

```
x:(19,28,37)	y:(99,108,117)
x:(19,28,37)	y:(117,108,99)
x:(37,28,19)	y:(99,108,117)
x:(37,28,19)	y:(117,108,99)
x:(99,108,117)	y:(19,28,37)
x:(99,108,117)	y:(37,28,19)
x:(117,108,99)	y:(19,28,37)
x:(117,108,99)	y:(37,28,19)

---------------------------------

1	2	3
4	5	6
7	8	9
```

得到8串可能的flag, 逐一提交